<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_textbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>BaseBox</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
margin = size / 2;

text_page = 0;
text_visible = "";
text_count = 0;
text_current = "";

top = false;

fnt = fnt_gui_18;

choice1 = "";
action1 = "";
choice2 = "";
action2 = "";
question = false;
question_choice = 0;
locked_question_choice = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Pause</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text_page = 0;
text_visible = "";
text_count = 0;
text_current = ds_list_find_value(text, text_page);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(alarm[1] != -1) exit;

if(top) {
    x = 0;
    y = 0;
} else {
    x = 0;
    y = display_get_gui_height() - (image_yscale * size);
}

var xx = x;
var yy = y;

image_xscale = display_get_gui_width() / size;
image_yscale = 6;

// Background
draw_self();

// Edges
draw_sprite_stretched(spr_textbox, t, xx, yy, size * image_xscale, size);
draw_sprite_stretched(spr_textbox, b, xx, yy + (image_yscale * size) - size, size * image_xscale, size);
draw_sprite_stretched(spr_textbox, l, xx, yy, size, size * image_yscale);
draw_sprite_stretched(spr_textbox, r, xx + (image_xscale * size) - size, yy, size, size * image_yscale);

// Corners
draw_sprite(spr_textbox, tl, xx, yy);
draw_sprite(spr_textbox, tr, xx + (image_xscale * size) - size, yy);
draw_sprite(spr_textbox, bl, xx, yy + (image_yscale * size) - size);
draw_sprite(spr_textbox, br, xx + (image_xscale * size) - size, yy + (image_yscale * size) - size);

textbox_check_command();

if(text_count &lt;= string_length(text_current)) {
    if(Input.interact) {
        text_count = string_length(text_current); 
    }
    text_visible = string_copy(text_current, 0, text_count);
    text_count++;
} else {
    if(Input.interact) {
        textbox_next_page();
    }
}

draw_set_colour(c_white);
draw_set_font(fnt);
draw_text_ext(xx + margin, yy + margin, text_visible, -1, sprite_width - (margin * 2));

if(question) {
    draw_set_align(fa_center, fa_middle);
    var hmov = Input.right_pressed - Input.left_pressed;
    
    question_choice += hmov;
    if(question_choice &lt; 0) {
        question_choice = 1;
    } else if(question_choice &gt; 1) {
        question_choice = 0;
    }
    
    xxx = xx + ((image_xscale * size) / 4);
    yyy = yy + ((image_yscale * size) / 2);
    
    xxx2 = xx + (image_xscale * size) - ((image_xscale * size) / 4);
    yyy2 = yy + ((image_yscale * size) / 2);
    
    if(question_choice == 1) {
        draw_text(xxx2 - ((string_width(choice2) / 2) + 20), yyy2, "&gt;");
    } else if(question_choice == 0) {
        draw_text(xxx - ((string_width(choice1) / 2) + 20), yyy, "&gt;");
    }
    
    draw_text(xxx, yyy, choice1);
    draw_text(xxx2, yyy2, choice2);
}

draw_set_defaults();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
